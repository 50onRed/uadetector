<?xml version="1.0"?>
<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
	<properties>
		<title>Known Issues when using UADetector</title>
		<author email="andre.rouel@googlemail.com">André Rouél</author>
	</properties>
	<body>
		<section name="Known Issues">
			<subsection name="Error while reading UAS data" class="knownIssues">
				<table class="table knownIssues">
					<tr>
						<th>Issue Description</th>
						<td>
							The log contains a message that reading of
							<i>UAS data</i>
							failed.
							<pre class="log"><![CDATA[[2013-06-20 20:17:13] WARN  [ernal.data.XmlDataHandler] :265 - Error while reading UAS data: Document root element "h1", must match DOCTYPE root "null". (line: 1)
[2013-06-20 20:17:13] WARN  [.datareader.XmlDataReader] :112 - Document root element "h1", must match DOCTYPE root "null".
[2013-06-20 20:17:13] WARN  [perationWithCacheFileTask] :203 - The read content is faulty and can not be processed correctly.
java.lang.IllegalStateException: The read in content can not be transformed to an instance of 'Data'.
    at net.sf.uadetector.datastore.UpdateOperationWithCacheFileTask.readAndSave(UpdateOperationWithCacheFileTask.java:115)
    at net.sf.uadetector.datastore.UpdateOperationWithCacheFileTask.readDataIfNewerAvailable(UpdateOperationWithCacheFileTask.java:193)
    at net.sf.uadetector.datastore.UpdateOperationWithCacheFileTask.call(UpdateOperationWithCacheFileTask.java:183)
    at net.sf.uadetector.datastore.AbstractUpdateOperation$1.run(AbstractUpdateOperation.java:161)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at java.lang.Thread.run(Thread.java:722)
[2013-06-20 20:17:13] INFO  [perationWithCacheFileTask] :212 - Reading fallback data...
]]></pre>
						</td>
					</tr>
					<tr>
						<th>Explanation</th>
						<td>
							UADetector pulls updates to its user agent database from
							<a href="http://user-agent-string.info/">http://user-agent-string.info</a>
							. Sometimes the website gets overloaded or has other issues.
							<br />
							We put a lot of work into ensuring that UADetector will continue to work with a recent version of the database
							even if downloading or parsing of the latest version fails. (i.e. Don't worry about those errors if they are
							occasional and intermittent.)
						</td>
					</tr>
					<tr>
						<th>Corresponding Issue</th>
						<td>
							<a href="https://github.com/before/uadetector/issues/31">https://github.com/before/uadetector/issues/31</a>
						</td>
					</tr>
					<tr>
						<th>Affected Versions</th>
						<td>
							&lt;=
							<code>uadetector-core-0.9.6</code>
							,
							<br />
							&lt;=
							<code>uadetector-resources-2013.06</code>
						</td>
					</tr>
				</table>
			</subsection>
			<subsection name="Cleanup Threads" class="knownIssues">
				<table class="table knownIssues">
					<tr>
						<th>Issue Description</th>
						<td>
							When an application using an implementation of
							<code>UserAgentStringParser</code>
							with updating functionality like
							<code>UADetectorServiceFactory.getCachingAndUpdatingParser()</code>
							or
							<code>UADetectorServiceFactory.getOnlineUpdatingParser()</code>
							results in the following warnings in
							<i>Apache Tomcat</i>
							on shutdown:
							<pre class="log"><![CDATA[Jun 18, 2013 10:18:57 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads
SEVERE: The web application [/gwx-tocs-rest] appears to have started a thread named [Thread-6] but has failed to stop it. This is very likely to create a memory leak.
Jun 18, 2013 10:18:57 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads
SEVERE: The web application [/gwx-tocs-rest] appears to have started a thread named [Thread-7] but has failed to stop it. This is very likely to create a memory leak.
Jun 18, 2013 10:18:57 AM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads]]></pre>
							When using a profiler you can see that
							<i>Thread-6</i>
							and
							<i>Thread-7</i>
							continue to run even though the application has been undeployed. It also causes the Classloader that no longer
							required objects of an uninstalled UADetector (within a webapp for example) will never be cleaned up during
							Garbage Collection.
						</td>
					</tr>
					<tr>
						<th>Explanation</th>
						<td>
							In environments where the
							<abbr title="Java Virtual Machine">JVM</abbr>
							will never shut down while reinstalling UADetector, it is necessary to manually shutdown running
							threads.
							Therefore we provide since
							<code>uadetector-core-0.9.6</code>
							<a href="./modules/uadetector-core/apidocs/net/sf/uadetector/UserAgentStringParser.html#shutdown()">UserAgentStringParser#shutdown()</a>
							and
							<a href="./modules/uadetector-core/apidocs/net/sf/uadetector/internal/util/ExecutorServices.html#shutdownAll()">ExecutorServices#shutdownAll()</a>
							to stop running executors and schedulers if necessary.
						</td>
					</tr>
					<tr>
						<th>Corresponding Issue</th>
						<td>
							<a href="https://github.com/before/uadetector/issues/4">https://github.com/before/uadetector/issues/4</a>
						</td>
					</tr>
					<tr>
						<th>Affected Versions</th>
						<td>
							&gt;=
							<code>uadetector-core-0.5.0</code>
							and
							&lt;=
							<code>uadetector-core-0.9.5</code>
							,
							<br />
							&gt;=
							<code>uadetector-resources-2012.08</code>
							and
							&lt;=
							<code>uadetector-resources-2013.05</code>
						</td>
					</tr>
				</table>
			</subsection>
		</section>
	</body>
</document>