<?xml version="1.0"?>
<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
	<properties>
		<title>Usage</title>
		<author email="andre.rouel@googlemail.com">André Rouél</author>
	</properties>
	<body>
		<section name="Usage">
			<h3>Requirements</h3>
			<p>
				The library depends on the Simple Logging Facade for Java (also known as SLF4J) to allowing the end user to plug
				in the
				desired logging framework at deployment time.
			</p>
			<p>
				This means that if the UADetector library is used also the SLF4J-API must exist in the classpath.
			</p>
			<p>
				To build UADetector yourself you need a JDK 1.6 or above and Apache Maven 3.x.
			</p>
			<h3>Example</h3>
			<p>
				To use the library it must be added to your classpath. With Apache Maven you easily add the following to your
				<code>pom.xml</code>
				.
			</p>
			<source><![CDATA[<project>
	...
	<dependencies>
		...
		<dependency>
			<groupId>net.sf.uadetector</groupId>
			<artifactId>uadetector-resources</artifactId>
			<version>2012.04</version>
		</dependency>
		...
	</dependencies>
	...
</project>
]]></source>
			<p>
				Then you should have access to the classes of the library. For example, you might want to make a Servlet as the
				following to detect an requesting client.
			</p>
			<source><![CDATA[package net.sf.uadetector.example;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.uadetector.UADetectorServiceFactory;
import net.sf.uadetector.UserAgent;
import net.sf.uadetector.UserAgentStringParser;

public class HelloServlet extends HttpServlet {

	private static final long serialVersionUID = 1L;

	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		response.setContentType("text/html");
		response.setStatus(HttpServletResponse.SC_OK);

		PrintWriter out = response.getWriter();

		// Get an UserAgentStringParser and analyze the requesting client
		UserAgentStringParser parser = UADetectorServiceFactory.getUserAgentStringParser();
		UserAgent agent = parser.parse(request.getHeader("User-Agent"));

		out.append("You're a <em>");
		out.append(agent.getName());
		out.append("</em> on <em>");
		out.append(agent.getOperatingSystem().getName());
		out.append("</em>!");
	}

}]]></source>
			<h3>Demo</h3>
			<p>
				You can also find a hello world demo in the Source Content Management System (SCM) under
				<a target="_blank"
					href="https://sourceforge.net/p/uadetector/code/ci/b07e03f255e3374e557295279ba90bace2223d55/tree/examples/helloworld/">examples/helloworld</a>
				. Just try to load the source code from the SCM.
			</p>
			<p>Your participation in this project is much appreciated!</p>
		</section>
	</body>
</document>
